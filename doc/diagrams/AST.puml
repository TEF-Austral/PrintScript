@startuml

interface ASTNode

interface Statement
interface Expression

class LiteralExpression {
    -token: Token
    +getValue(): String
}

class IdentifierExpression {
    -token: Token
    +getName(): String
}

class BinaryExpression {
    -left: Expression
    -operator: Token
    -right: Expression
    +getLeft(): Expression
    +getOperator(): Token
    +getRight(): Expression
}

class VariableDeclarationStatement {
    -identifier: Token
    -dataType: Token
    -initialValue: Expression
    +getIdentifier(): String
    +getDataType(): String
    +getInitialValue(): Expression
}

class AssignmentStatement {
    -identifier: Token
    -value: Expression
    +getIdentifier(): String
    +getValue(): Expression
}

class PrintStatement {
    -expression: Expression
    +getExpression(): Expression
}

class BlockStatement {
    -statements: List<Statement>
    +getStatements(): List<Statement>
}

class ExpressionStatement {
    -expression: Expression
    +getExpression(): Expression
}

class Program {
    -statements: List<Statement>
    +getStatements(): List<Statement>
}


ASTNode <|.. Statement
ASTNode <|.. Expression
Expression <|-- LiteralExpression
Expression <|-- IdentifierExpression
Expression <|-- BinaryExpression
Statement <|-- VariableDeclarationStatement
Statement <|-- AssignmentStatement
Statement <|-- PrintStatement
Statement <|-- BlockStatement
Statement <|-- ExpressionStatement
ASTNode <|-- Program


@enduml